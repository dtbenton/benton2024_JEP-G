# objects pretrain
object_1_23 = modified_op_full[31,]
object_2_23 = modified_op_full[32,]
names(object_1_23) = NULL
rownames(object_1_23) = NULL
row.names(object_1_23) = NULL
names(object_2_23) = NULL
rownames(object_2_23) = NULL
row.names(object_2_23) = NULL
###########################################################################
## PEOPLE_FEATURES AND OBJECT_FEATURES HABITUATION AND TRAINING EXAMPLES ##
###########################################################################
# people test
people_1_hab_test = modified_op_full[33:34,]
people_2_hab_test = modified_op_full[35:36,]
names(people_1_hab_test) = NULL
rownames(people_1_hab_test) = NULL
row.names(people_1_hab_test) = NULL
names(people_2_hab_test) = NULL
rownames(people_2_hab_test) = NULL
row.names(people_2_hab_test) = NULL
# objects test
object_1_hab_test = modified_op_full[37:38,]
object_2_hab_test = modified_op_full[39:40,]
names(object_1_hab_test) = NULL
rownames(object_1_hab_test) = NULL
row.names(object_1_hab_test) = NULL
names(object_2_hab_test) = NULL
rownames(object_2_hab_test) = NULL
row.names(object_2_hab_test) = NULL
######################
## ANIMATE FEATURES ##
######################
animate_features = data.frame(x = c('1 0', '0 1'))
names(animate_features) = NULL
# HAS ANIMATE FEATURES: 0 1
# DOESN'T HAVE ANIMATE FEATURES: 1 0
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/4mosModelData/People")
people.100.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.90.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.80.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.70.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.60.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.50.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/4mosModelData/Object")
object.100.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.90.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.80.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.70.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.60.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.50.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/4mosModelData/PeopleObject")
peopleObjects.100.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.90.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.80.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.70.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.60.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.50.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/4mosModelData/ObjectPeople")
objectsPeople.100.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.90.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.80.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.70.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.60.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.50.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
# combine dataframes into a single 'D.4s' data frame
D.4s = rbind(people.100.4s, people.90.4s, people.80.4s, people.70.4s, people.60.4s, people.50.4s,
object.100.4s, object.90.4s, object.80.4s, object.70.4s, object.60.4s, object.50.4s,
peopleObjects.100.4s, peopleObjects.90.4s, peopleObjects.80.4s, peopleObjects.70.4s, peopleObjects.60.4s, peopleObjects.50.4s,
objectsPeople.100.4s, objectsPeople.90.4s, objectsPeople.80.4s, objectsPeople.70.4s, objectsPeople.60.4s, objectsPeople.50.4s)
# get dimensionality of D.4s
dim(D.4s)
# create an ID column
D.4s$ID = rep(1:480, each = 40)
# create trial type column
D.4s$trialType = rep(c("Contact", "No Contact"), each = 1,  times = 9600)
D.4s$trialType = as.factor(D.4s$trialType)
# create condition column
D.4s$condition = rep(c("People", "Objects", "People with Inanimate Features",
"Objects with Animate Features"),
each = 4800)
D.4s$condition = as.factor(D.4s$condition)
# reorder levels of condition
D.4s$condition <- factor(D.4s$condition, levels = c("Objects",
"People",
"People with Inanimate Features",
"Objects with Animate Features"))
# create frequency column
D.4s$frequency = rep(c("100 percent", "90 percent", "80 percent", "70 percent", "60 percent", "50 percent"),
each = 800, times = 4)
D.4s$frequency = as.factor(D.4s$frequency)
# create a 'looking time' column
D.4s$lookingTime = D.4s$V3
# remove columns and get the names of the resulting columns
D.4s = D.4s[,-c(1:3)]
names(D.4s)
# check the order of the levels of the frequency variable
levels(D.4s$frequency)
# reorder levels of the frequency variable
D.4s$frequency <- factor(D.4s$frequency, levels = c("100 percent",
"90 percent",
"80 percent",
"70 percent",
"60 percent",
"50 percent"))
####################
## OMNIBUS FIGURE ##
####################
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
library(ggplot2)
library(ggsignif)
library(dplyr)
# combine dataframes into a single 'D.4s' data frame
D.4s = rbind(people.100.4s, people.90.4s, people.80.4s, people.70.4s, people.60.4s, people.50.4s,
object.100.4s, object.90.4s, object.80.4s, object.70.4s, object.60.4s, object.50.4s,
peopleObjects.100.4s, peopleObjects.90.4s, peopleObjects.80.4s, peopleObjects.70.4s, peopleObjects.60.4s, peopleObjects.50.4s,
objectsPeople.100.4s, objectsPeople.90.4s, objectsPeople.80.4s, objectsPeople.70.4s, objectsPeople.60.4s, objectsPeople.50.4s)
# get dimensionality of D.4s
dim(D.4s)
# create an ID column
D.4s$ID = rep(1:480, each = 40)
# create trial type column
D.4s$trialType = rep(c("Contact", "No Contact"), each = 1,  times = 9600)
D.4s$trialType = as.factor(D.4s$trialType)
# create condition column
D.4s$condition = rep(c("People", "Objects", "People with Inanimate Features",
"Objects with Animate Features"),
each = 4800)
D.4s$condition = as.factor(D.4s$condition)
# reorder levels of condition
D.4s$condition <- factor(D.4s$condition, levels = c("Objects",
"People",
"People with Inanimate Features",
"Objects with Animate Features"))
# create frequency column
D.4s$frequency = rep(c("100 percent", "90 percent", "80 percent", "70 percent", "60 percent", "50 percent"),
each = 800, times = 4)
D.4s$frequency = as.factor(D.4s$frequency)
# create a 'looking time' column
D.4s$lookingTime = D.4s$V3
# remove columns and get the names of the resulting columns
D.4s = D.4s[,-c(1:3)]
names(D.4s)
# check the order of the levels of the frequency variable
levels(D.4s$frequency)
# reorder levels of the frequency variable
D.4s$frequency <- factor(D.4s$frequency, levels = c("100 percent",
"90 percent",
"80 percent",
"70 percent",
"60 percent",
"50 percent"))
####################
## OMNIBUS FIGURE ##
####################
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 250)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 10),
axis.text.y = element_text(size = 10),
legend.text=element_text(size=10),
legend.title = element_text(size=10),
axis.title=element_text(size=10),
strip.text = element_text(
size = 10))
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 250)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_text(size=8),
strip.text = element_text(
size = 8))
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 250)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8, angle = 45, vjust = 0.5, hjust = 1),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_text(size=8),
strip.text = element_text(
size = 8))
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 250)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8, angle = 45, vjust = 0.5, hjust = 0),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_text(size=8),
strip.text = element_text(
size = 8))
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 250)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8, angle = 45, vjust = 0, hjust = 1),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_text(size=8),
strip.text = element_text(
size = 8))
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 250)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8, angle = 45, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_text(size=8),
strip.text = element_text(
size = 8))
condition_barplot = ggplot(D.4s, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 250)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 10, angle = 45, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 10),
legend.text=element_text(size=10),
legend.title = element_text(size=10),
axis.title=element_text(size=10),
strip.text = element_text(
size = 10))
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/7mosModelData/People")
people.100 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.90 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.80 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.70 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.60 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.50 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/7mosModelData/Object")
object.100 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.90 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/7mosModelData/Object")
object.100 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.90 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.80 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.70 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.60 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.50 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/7mosModelData/PeopleObject")
peopleObjects.100 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.90 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.80 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.70 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.60 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.50 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/7mosModelData/ObjectPeople")
objectsPeople.100 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.90 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.80 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.70 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.60 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
objectsPeople.50 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
# combine dataframes into a single 'D' data frame
D = rbind(people.100, people.90, people.80, people.70, people.60, people.50,
object.100, object.90, object.80, object.70, object.60, object.50,
peopleObjects.100, peopleObjects.90, peopleObjects.80, peopleObjects.70, peopleObjects.60, peopleObjects.50,
objectsPeople.100, objectsPeople.90, objectsPeople.80, objectsPeople.70, objectsPeople.60, objectsPeople.50)
# get dimensionality of D
dim(D)
# create an ID column
D$ID = rep(1:480, each = 40)
# create trial type column
D$trialType = rep(c("Contact", "No Contact"), each = 1,  times = 9600)
D$trialType = as.factor(D$trialType)
# create condition column
D$condition = rep(c("People", "Objects", "People with Inanimate Features",
"Objects with Animate Features"),
each = 4800)
D$condition = as.factor(D$condition)
# reorder levels of condition
D$condition <- factor(D$condition, levels = c("Objects",
"People",
"People with Inanimate Features",
"Objects with Animate Features"))
# create frequency column
D$frequency = rep(c("100 percent", "90 percent", "80 percent", "70 percent", "60 percent", "50 percent"),
each = 800, times = 4)
D$frequency = as.factor(D$frequency)
# create a 'looking time' column
D$lookingTime = D$V3
# remove columns and get the names of the resulting columns
D = D[,-c(1:3)]
names(D)
# check the order of the levels of the frequency variable
levels(D$frequency)
# reorder levels of the frequency variable
D$frequency <- factor(D$frequency, levels = c("100 percent",
"90 percent",
"80 percent",
"70 percent",
"60 percent",
"50 percent"))
####################
## OMNIBUS FIGURE ##
####################
# figure
condition_barplot = ggplot(D, aes(condition, lookingTime, fill=trialType)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency, ncol=2) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 220)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 10, angle = 45, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 10),
legend.text=element_text(size=10),
legend.title = element_text(size=10),
axis.title=element_text(size=10),
strip.text = element_text(
size = 10))
# Load all relevant libraries
# Install packages
library(lme4)
# load data
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSims135/exp1")
data.100.1500.exp1 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.100.1500.exp1 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.90.1500.exp1 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.80.1500.exp1 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.70.1500.exp1 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.60.1500.exp1 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.50.1500.exp1 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSim2")
data.100.1500.exp2 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.90.1500.exp2 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.80.1500.exp2 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.70.1500.exp2 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.60.1500.exp2 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.50.1500.exp2 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSims135/exp3")
data.100.1500.exp3 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.90.1500.exp3 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.80.1500.exp3 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.70.1500.exp3 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.60.1500.exp3 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.50.1500.exp3 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSims135/exp5")
data.100.1500.exp5 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.90.1500.exp5 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.80.1500.exp5 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.70.1500.exp5 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.60.1500.exp5 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.50.1500.exp5 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
D = rbind(data.100.1500.exp1, data.90.1500.exp1, data.80.1500.exp1, data.70.1500.exp1, data.60.1500.exp1, data.50.1500.exp1,
data.100.1500.exp2, data.90.1500.exp2, data.80.1500.exp2, data.70.1500.exp2, data.60.1500.exp2, data.50.1500.exp2,
data.100.1500.exp3, data.90.1500.exp3, data.80.1500.exp3, data.70.1500.exp3, data.60.1500.exp3, data.50.1500.exp3,
data.100.1500.exp5, data.90.1500.exp5, data.80.1500.exp5, data.70.1500.exp5, data.60.1500.exp5, data.50.1500.exp5)
# add new columns
D$ID = rep(c(1:480), each = 40)
D$test_event = rep(c("Hand-Generated", "Self-Propelled"), each = 2, times = 4800)
D$test_event = as.factor(D$test_event)
D$exp = rep(c("Experiment 1","Experiment 2", "Experiment 3", "Experiment 5"), each = 4800)
D$exp = as.factor(D$exp)
# create frequency column
D$frequency = rep(c("100 percent", "90 percent", "80 percent", "70 percent", "60 percent", "50 percent"),
each = 800, times = 4)
D$frequency = as.factor(D$frequency)
D$looking_time = D$V3
# remove unnecessary columns
D = D[,-c(1:3)]
# check the order of the levels of the frequency variable
levels(D$frequency)
# reorder levels of the frequency variable
D$frequency <- factor(D$frequency, levels = c("100 percent",
"90 percent",
"80 percent",
"70 percent",
"60 percent",
"50 percent"))
####################
## OMNIBUS FIGURE ##
####################
# figure
condition_barplot = ggplot(D, aes(exp, looking_time, fill=test_event)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 110)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_text(size=8))
# load data
setwd("C:/Users/Deon T. Benton/Documents/projects/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSims46/exp4")
data.100.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.90.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
# load data
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSims46/exp4")
# load data
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSims46/exp4")
data.100.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.90.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.80.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.70.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.60.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.50.1500.exp4 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/marksonSpelke2006/3Contact3NoContactTestEvents/dataSims46/exp6")
data.100.1500.exp6 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.90.1500.exp6 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.80.1500.exp6 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.70.1500.exp6 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.60.1500.exp6 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
data.50.1500.exp6 = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
D.4a6 = rbind(data.100.1500.exp4, data.90.1500.exp4, data.80.1500.exp4, data.70.1500.exp4, data.60.1500.exp4, data.50.1500.exp4,
data.100.1500.exp6, data.90.1500.exp6, data.80.1500.exp6, data.70.1500.exp6, data.60.1500.exp6, data.50.1500.exp6)
# add new columns
D.4a6$ID = rep(c(1:240), each = 40)
D.4a6$test_event = rep(c("Old", "New"), each = 2, times = 2400)
D.4a6$test_event = as.factor(D.4a6$test_event)
D.4a6$exp = rep(c("Experiment 4","Experiment 6"), each = 4800)
D.4a6$exp = as.factor(D.4a6$exp)
# create frequency column
D.4a6$frequency = rep(c("100 percent", "90 percent", "80 percent", "70 percent", "60 percent", "50 percent"),
each = 800, times = 2)
D.4a6$frequency = as.factor(D.4a6$frequency)
D.4a6$looking_time = D.4a6$V3
# remove unnecessary columns
D.4a6 = D.4a6[,-c(1:3)]
# check the order of the levels of the frequency variable
levels(D.4a6$frequency)
# reorder levels of the frequency variable
D.4a6$frequency <- factor(D.4a6$frequency, levels = c("100 percent",
"90 percent",
"80 percent",
"70 percent",
"60 percent",
"50 percent"))
####################
## OMNIBUS FIGURE ##
####################
# figure
condition_barplot = ggplot(D.4a6, aes(exp, looking_time, fill=test_event)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 8)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_text(size=8))
condition_barplot = ggplot(D.4a6, aes(exp, looking_time, fill=test_event)) # create the bar graph with test.trial.2 on the x-axis and measure on the y-axis
condition_barplot + stat_summary(fun = mean, geom = "bar", position = "dodge") + # add the bars, which represent the means and the place them side-by-side with 'dodge'
stat_summary(fun.data=mean_cl_boot, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) + # add errors bars
ylab("Looking Time") + # change the label of the y-axis
facet_wrap(~frequency) +
scale_y_continuous(expand = c(0, 0)) +
coord_cartesian(ylim=c(0, 8)) +
scale_fill_manual(values = c("black", "azure3")) +
labs(fill='Test Trial')  +
theme(axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
legend.text=element_text(size=8),
legend.title = element_text(size=8),
axis.title=element_blank())
