setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision2/supplementaryAnalyses/spelkePhillipsWoodward95/4mosModelData/People")
people.100.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.90.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.80.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.70.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.60.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
people.50.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision2/supplementaryAnalyses/spelkePhillipsWoodward95/4mosModelData/Object")
object.100.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.90.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.80.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.70.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.60.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
object.50.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision2/supplementaryAnalyses/spelkePhillipsWoodward95/4mosModelData/PeopleObject")
peopleObjects.100.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.90.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.80.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.70.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.60.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
peopleObjects.50.4s = read.table(file.choose(), header = FALSE, stringsAsFactors = FALSE)
setwd("C:/Users/bentod2/Documents/projects/current/spelkeSaxeSimulationsNEW/postMS/final/JEPGeneral/revision1/simulations/spelkePhillipsWoodward1995/SRN/3Contact3NoContactTestEvents/4mosModelData/ObjectPeople")
# load all relevant libraries
library(nlme)
library(lme4)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
library(foreign)
library(dplyr)
library(lattice)
library(openxlsx)
library(BFpack)
options(scipen=9999)
# DATA CLEAN UP AND RESTRUCTURING #
Data = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove unnecessary columns
names(Data)
Data$ID = NULL
Data$final_phase = NULL
names(Data)
dim(Data)
dimension = dim(Data)
Data_tall =  reshape(Data, varying = c(14:21), v.names = "measure",
timevar = "condition",   direction = "long")
Data_tall = Data_tall[order(Data_tall$ID_for_analysis),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
names(Data_tall)
Data_tall$id = NULL
names(Data_tall)
Data_tall$trialType = rep(c("control","control","control","control","control","experimental","experimental",
"experimental"), times = dimension[1])
Data_tall$objectType = rep(c("A","B","C","D","E",
"A","B","C"), times = dimension[1])
# CHANGE SOME OF THE COLUMN NAMES
names(Data_tall)
colnames(Data_tall)[which(names(Data_tall) == "ID_for_analysis")] <- "ID"
colnames(Data_tall)[which(names(Data_tall) == "age.y.")] <- "Age"
colnames(Data_tall)[which(names(Data_tall) == "age.m.")] <- "AgeNum"
colnames(Data_tall)[which(names(Data_tall) == "sex")] <- "Sex"
colnames(Data_tall)[which(names(Data_tall) == "Inperson.online")] <- "Location"
colnames(Data_tall)[which(names(Data_tall) == "ask_order")] <- "AskOrder"
colnames(Data_tall)[which(names(Data_tall) == "location_of_A")] <- "Alocation"
colnames(Data_tall)[which(names(Data_tall) == "prepretest")] <- "Prepretest"
colnames(Data_tall)[which(names(Data_tall) == "measure")] <- "choice"
colnames(Data_tall)[which(names(Data_tall) == "color_of_objects")] <- "Color"
colnames(Data_tall)[which(names(Data_tall) == "probability")] <- "Probability"
colnames(Data_tall)[which(names(Data_tall) == "order_of_the_machine_going")] <- "PretestOrder"
colnames(Data_tall)[which(names(Data_tall) == "prob_generalization")] <- "ProbGeneralization"
colnames(Data_tall)[which(names(Data_tall) == "experimental_vs_control_order")] <- "TrialOrder"
names(Data_tall)
fix(Data_tall)
# MODIFY CHOICES COLUMN
# Deal with "unsures" in the choice column
Data_tall$choices = rep(0, nrow(Data_tall))
for(i in 1:nrow(Data_tall)){
if(is.na(Data_tall$choice[i])==T|Data_tall$choice[i]=="NaN"){
Data_tall$choices[i]= NA
} else if(Data_tall$choice[i]==1){
Data_tall$choices[i]=1
} else if(Data_tall$choice[i]==0){
Data_tall$choices[i]=0
}
else {
Data_tall$choices[i]=NA
}
}
Data_tall$choice = Data_tall$choices
Data_tall$choices = NULL
Data_tall$choice = as.numeric(Data_tall$choice)
# MODIFY ProbGeneralization COLUMN
# Deal with numbers and "unsures" in the ProbGeneralization column
Data_tall$ProbGeneralizations = rep(NA, nrow(Data_tall))
for(i in 1:nrow(Data_tall)){
if(is.null(Data_tall$ProbGeneralization[i])){
Data_tall$ProbGeneralizations[i]=NA
} else if(Data_tall$ProbGeneralization[i]==0){
Data_tall$ProbGeneralizations[i]="E"
} else if(Data_tall$ProbGeneralization[i]<4&Data_tall$ProbGeneralization[i]>0){
Data_tall$ProbGeneralizations[i]="D"
} else if(Data_tall$ProbGeneralization[i]==4){
Data_tall$ProbGeneralizations[i]="C"
} else if(Data_tall$ProbGeneralization[i]<8&Data_tall$ProbGeneralization[i]>4){
Data_tall$ProbGeneralizations[i]="B"
} else if(Data_tall$ProbGeneralization[i]==8){
Data_tall$ProbGeneralizations[i]="A"
} else{
Data_tall$ProbGeneralizations[i]=Data_tall$ProbGeneralization[i]
}
}
Data_tall$ProbGeneralization = Data_tall$ProbGeneralizations
Data_tall$ProbGeneralizations = NULL
Data_tall$ProbGeneralization = as.factor(Data_tall$ProbGeneralization)
# get counts for choice and ProbGeneralization
table(Data_tall$choice)
table(Data_tall$ProbGeneralization)
# RENAME LEVELS OF COLUMNS
Data_tall$Location = revalue(x = as.factor(Data_tall$Location),
c("0" = "Online", "1"="In person"))
Data_tall$Sex = revalue(x = as.factor(Data_tall$Sex),
c("F" = "female", "M"="male"))
Data_tall$Color = revalue(x = as.factor(Data_tall$Color),
c("P" = "Pink", "O"="Orange", "B"="Blue", "G"="Green", "Y"="Yellow", "R"="Red"))
Data_tall$Prepretest = revalue(x = as.factor(Data_tall$Prepretest),
c("0" = "Incorrect", "1"="Correct"))
Data_tall$Probability = revalue(x = as.factor(Data_tall$Probability),
c("A" = "0%", "B"="20%", "C"="50%", "D"="80%", "E"="100%"))
Data_tall$ProbGeneralization = revalue(x = as.factor(Data_tall$ProbGeneralization),
c("E" = "0%", "D"="20%", "C"="50%", "B"="80%", "A"="100%"))
Data_tall$Age = as.factor(Data_tall$Age)
Data_tall$PretestOrder = as.factor(Data_tall$PretestOrder)
Data_tall$TrialOrder = as.factor(Data_tall$TrialOrder)
Data_tall$AskOrder = as.factor(Data_tall$AskOrder)
Data_tall$Alocation = as.factor(Data_tall$Alocation)
Data_tall$trialType = as.factor(Data_tall$trialType)
Data_tall$objectType = as.factor(Data_tall$objectType)
# REODRDER COLUMNS
Data_tall$condition = NULL
names(Data_tall)
dim(Data_tall)
Data_tall = as.data.frame(Data_tall[,c(1,3:5,2,6:13,15:16,14)])
fix(Data_tall)
is.factor(Data_tall$Age)
levels(Data_tall$Probability)
fix(Data_tall)
Data_tall = Data_tall[-c(137:145),]
fix(Data_tall)
# DATA CLEAN UP AND RESTRUCTURING #
Data = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove unnecessary columns
names(Data)
Data$ID = NULL
Data$final_phase = NULL
names(Data)
dim(Data)
dimension = dim(Data)
Data_tall =  reshape(Data, varying = c(14:21), v.names = "measure",
timevar = "condition",   direction = "long")
Data_tall = Data_tall[order(Data_tall$ID_for_analysis),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
names(Data_tall)
Data_tall$id = NULL
names(Data_tall)
Data_tall$trialType = rep(c("control","control","control","control","control","experimental","experimental",
"experimental"), times = dimension[1])
Data_tall$objectType = rep(c("A","B","C","D","E",
"A","B","C"), times = dimension[1])
# CHANGE SOME OF THE COLUMN NAMES
names(Data_tall)
colnames(Data_tall)[which(names(Data_tall) == "ID_for_analysis")] <- "ID"
colnames(Data_tall)[which(names(Data_tall) == "age.y.")] <- "Age"
colnames(Data_tall)[which(names(Data_tall) == "age.m.")] <- "AgeNum"
colnames(Data_tall)[which(names(Data_tall) == "sex")] <- "Sex"
colnames(Data_tall)[which(names(Data_tall) == "Inperson.online")] <- "Location"
colnames(Data_tall)[which(names(Data_tall) == "ask_order")] <- "AskOrder"
colnames(Data_tall)[which(names(Data_tall) == "location_of_A")] <- "Alocation"
colnames(Data_tall)[which(names(Data_tall) == "prepretest")] <- "Prepretest"
colnames(Data_tall)[which(names(Data_tall) == "measure")] <- "choice"
colnames(Data_tall)[which(names(Data_tall) == "color_of_objects")] <- "Color"
colnames(Data_tall)[which(names(Data_tall) == "probability")] <- "Probability"
colnames(Data_tall)[which(names(Data_tall) == "order_of_the_machine_going")] <- "PretestOrder"
colnames(Data_tall)[which(names(Data_tall) == "prob_generalization")] <- "ProbGeneralization"
colnames(Data_tall)[which(names(Data_tall) == "experimental_vs_control_order")] <- "TrialOrder"
names(Data_tall)
# MODIFY CHOICES COLUMN
# Deal with "unsures" in the choice column
Data_tall$choices = rep(0, nrow(Data_tall))
for(i in 1:nrow(Data_tall)){
if(is.na(Data_tall$choice[i])==T|Data_tall$choice[i]=="NaN"){
Data_tall$choices[i]= NA
} else if(Data_tall$choice[i]==1){
Data_tall$choices[i]=1
} else if(Data_tall$choice[i]==0){
Data_tall$choices[i]=0
}
else {
Data_tall$choices[i]=NA
}
}
Data_tall$choice = Data_tall$choices
Data_tall$choices = NULL
Data_tall$choice = as.numeric(Data_tall$choice)
# MODIFY ProbGeneralization COLUMN
# Deal with numbers and "unsures" in the ProbGeneralization column
Data_tall$ProbGeneralizations = rep(NA, nrow(Data_tall))
for(i in 1:nrow(Data_tall)){
if(is.null(Data_tall$ProbGeneralization[i])){
Data_tall$ProbGeneralizations[i]=NA
} else if(Data_tall$ProbGeneralization[i]==0){
Data_tall$ProbGeneralizations[i]="E"
} else if(Data_tall$ProbGeneralization[i]<4&Data_tall$ProbGeneralization[i]>0){
Data_tall$ProbGeneralizations[i]="D"
} else if(Data_tall$ProbGeneralization[i]==4){
Data_tall$ProbGeneralizations[i]="C"
} else if(Data_tall$ProbGeneralization[i]<8&Data_tall$ProbGeneralization[i]>4){
Data_tall$ProbGeneralizations[i]="B"
} else if(Data_tall$ProbGeneralization[i]==8){
Data_tall$ProbGeneralizations[i]="A"
} else{
Data_tall$ProbGeneralizations[i]=Data_tall$ProbGeneralization[i]
}
}
Data_tall$ProbGeneralization = Data_tall$ProbGeneralizations
Data_tall$ProbGeneralizations = NULL
Data_tall$ProbGeneralization = as.factor(Data_tall$ProbGeneralization)
# get counts for choice and ProbGeneralization
table(Data_tall$choice)
table(Data_tall$ProbGeneralization)
# RENAME LEVELS OF COLUMNS
Data_tall$Location = revalue(x = as.factor(Data_tall$Location),
c("0" = "Online", "1"="In person"))
Data_tall$Sex = revalue(x = as.factor(Data_tall$Sex),
c("F" = "female", "M"="male"))
Data_tall$Color = revalue(x = as.factor(Data_tall$Color),
c("P" = "Pink", "O"="Orange", "B"="Blue", "G"="Green", "Y"="Yellow", "R"="Red"))
Data_tall$Prepretest = revalue(x = as.factor(Data_tall$Prepretest),
c("0" = "Incorrect", "1"="Correct"))
Data_tall$Probability = revalue(x = as.factor(Data_tall$Probability),
c("A" = "0%", "B"="20%", "C"="50%", "D"="80%", "E"="100%"))
Data_tall$ProbGeneralization = revalue(x = as.factor(Data_tall$ProbGeneralization),
c("E" = "0%", "D"="20%", "C"="50%", "B"="80%", "A"="100%"))
Data_tall$Age = as.factor(Data_tall$Age)
Data_tall$PretestOrder = as.factor(Data_tall$PretestOrder)
Data_tall$TrialOrder = as.factor(Data_tall$TrialOrder)
Data_tall$AskOrder = as.factor(Data_tall$AskOrder)
Data_tall$Alocation = as.factor(Data_tall$Alocation)
Data_tall$trialType = as.factor(Data_tall$trialType)
Data_tall$objectType = as.factor(Data_tall$objectType)
# REODRDER COLUMNS
Data_tall$condition = NULL
names(Data_tall)
dim(Data_tall)
Data_tall = as.data.frame(Data_tall[,c(1,3:5,2,6:13,15:16,14)])
fix(Data_tall)
levels(Data_tall$Probability)
Data_tall$x = ifelse(Data_tall$Probability=="P","100%",Data_tall$Probability)
table(Data_tall$x)
Data_tall$x = ifelse(Data_tall$Probability=="P","100%")
Data_tall$Probability[Data_tall$Probability=="P"]="100%"
levels(Data_tall$Probability)
Data_tall$Probability2 = NULL
for(i in 1:nrow(Data_tall)){
if(Data_tall$Probability[i]=="P"){
Data_tall$Probability2[i]=="100%"
}else{
Data_tall$Probability2[i]
}
}
Data_tall$Probability2 = rep(0,nrow(Data_tall))
for(i in 1:nrow(Data_tall)){
if(Data_tall$Probability[i]=="P"){
Data_tall$Probability2[i]=="100%"
}else{
Data_tall$Probability2[i]
}
}
levels(Data_tall$Probability2)
is.factor(Data_tall$Probability2)
Data_tall$Probability2 = as.factor(Data_tall$Probability2)
levels(Data_tall$Probability2)
Data_tall = Data_tall[-c(137:145),]
levels(Data_tall$Probability)
Data_tall = Data_tall[-c(137:145),]
levels(Data_tall$Probability)
# DATA CLEAN UP AND RESTRUCTURING #
Data = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
fix(Data)
# DATA CLEAN UP AND RESTRUCTURING #
Data = read.csv(file.choose(), header = TRUE, stringsAsFactors = FALSE)
# remove unnecessary columns
names(Data)
Data$ID = NULL
Data$final_phase = NULL
names(Data)
dim(Data)
dimension = dim(Data)
Data_tall =  reshape(Data, varying = c(14:21), v.names = "measure",
timevar = "condition",   direction = "long")
Data_tall = Data_tall[order(Data_tall$ID_for_analysis),] # order the data frame in terms of participant ID;
# to avoid wonky things happening and to save yourself
# a full-day headache in the future, reorder by ID
# immediately after reshaping the dataframe.
names(Data_tall)
Data_tall$id = NULL
names(Data_tall)
Data_tall$trialType = rep(c("control","control","control","control","control","experimental","experimental",
"experimental"), times = dimension[1])
Data_tall$objectType = rep(c("A","B","C","D","E",
"A","B","C"), times = dimension[1])
# CHANGE SOME OF THE COLUMN NAMES
names(Data_tall)
colnames(Data_tall)[which(names(Data_tall) == "ID_for_analysis")] <- "ID"
colnames(Data_tall)[which(names(Data_tall) == "age.y.")] <- "Age"
colnames(Data_tall)[which(names(Data_tall) == "age.m.")] <- "AgeNum"
colnames(Data_tall)[which(names(Data_tall) == "sex")] <- "Sex"
colnames(Data_tall)[which(names(Data_tall) == "Inperson.online")] <- "Location"
colnames(Data_tall)[which(names(Data_tall) == "ask_order")] <- "AskOrder"
colnames(Data_tall)[which(names(Data_tall) == "location_of_A")] <- "Alocation"
colnames(Data_tall)[which(names(Data_tall) == "prepretest")] <- "Prepretest"
colnames(Data_tall)[which(names(Data_tall) == "measure")] <- "choice"
colnames(Data_tall)[which(names(Data_tall) == "color_of_objects")] <- "Color"
colnames(Data_tall)[which(names(Data_tall) == "probability")] <- "Probability"
colnames(Data_tall)[which(names(Data_tall) == "order_of_the_machine_going")] <- "PretestOrder"
colnames(Data_tall)[which(names(Data_tall) == "prob_generalization")] <- "ProbGeneralization"
colnames(Data_tall)[which(names(Data_tall) == "experimental_vs_control_order")] <- "TrialOrder"
names(Data_tall)
# MODIFY CHOICES COLUMN
# Deal with "unsures" in the choice column
Data_tall$choices = rep(0, nrow(Data_tall))
for(i in 1:nrow(Data_tall)){
if(is.na(Data_tall$choice[i])==T|Data_tall$choice[i]=="NaN"){
Data_tall$choices[i]= NA
} else if(Data_tall$choice[i]==1){
Data_tall$choices[i]=1
} else if(Data_tall$choice[i]==0){
Data_tall$choices[i]=0
}
else {
Data_tall$choices[i]=NA
}
}
Data_tall$choice = Data_tall$choices
Data_tall$choices = NULL
Data_tall$choice = as.numeric(Data_tall$choice)
# MODIFY ProbGeneralization COLUMN
# Deal with numbers and "unsures" in the ProbGeneralization column
Data_tall$ProbGeneralizations = rep(NA, nrow(Data_tall))
for(i in 1:nrow(Data_tall)){
if(is.null(Data_tall$ProbGeneralization[i])){
Data_tall$ProbGeneralizations[i]=NA
} else if(Data_tall$ProbGeneralization[i]==0){
Data_tall$ProbGeneralizations[i]="E"
} else if(Data_tall$ProbGeneralization[i]<4&Data_tall$ProbGeneralization[i]>0){
Data_tall$ProbGeneralizations[i]="D"
} else if(Data_tall$ProbGeneralization[i]==4){
Data_tall$ProbGeneralizations[i]="C"
} else if(Data_tall$ProbGeneralization[i]<8&Data_tall$ProbGeneralization[i]>4){
Data_tall$ProbGeneralizations[i]="B"
} else if(Data_tall$ProbGeneralization[i]==8){
Data_tall$ProbGeneralizations[i]="A"
} else{
Data_tall$ProbGeneralizations[i]=Data_tall$ProbGeneralization[i]
}
}
Data_tall$ProbGeneralization = Data_tall$ProbGeneralizations
Data_tall$ProbGeneralizations = NULL
Data_tall$ProbGeneralization = as.factor(Data_tall$ProbGeneralization)
# get counts for choice and ProbGeneralization
table(Data_tall$choice)
table(Data_tall$ProbGeneralization)
# RENAME LEVELS OF COLUMNS
Data_tall$Location = revalue(x = as.factor(Data_tall$Location),
c("0" = "Online", "1"="In person"))
Data_tall$Sex = revalue(x = as.factor(Data_tall$Sex),
c("F" = "female", "M"="male"))
Data_tall$Color = revalue(x = as.factor(Data_tall$Color),
c("P" = "Pink", "O"="Orange", "B"="Blue", "G"="Green", "Y"="Yellow", "R"="Red"))
Data_tall$Prepretest = revalue(x = as.factor(Data_tall$Prepretest),
c("0" = "Incorrect", "1"="Correct"))
Data_tall$Probability = revalue(x = as.factor(Data_tall$Probability),
c("A" = "0%", "B"="20%", "C"="50%", "D"="80%", "E"="100%"))
Data_tall$ProbGeneralization = revalue(x = as.factor(Data_tall$ProbGeneralization),
c("E" = "0%", "D"="20%", "C"="50%", "B"="80%", "A"="100%"))
Data_tall$Age = as.factor(Data_tall$Age)
Data_tall$PretestOrder = as.factor(Data_tall$PretestOrder)
Data_tall$TrialOrder = as.factor(Data_tall$TrialOrder)
Data_tall$AskOrder = as.factor(Data_tall$AskOrder)
Data_tall$Alocation = as.factor(Data_tall$Alocation)
Data_tall$trialType = as.factor(Data_tall$trialType)
Data_tall$objectType = as.factor(Data_tall$objectType)
# REODRDER COLUMNS
Data_tall$condition = NULL
names(Data_tall)
dim(Data_tall)
Data_tall = as.data.frame(Data_tall[,c(1,3:5,2,6:13,15:16,14)])
fix(Data_tall)
levels(Data_tall$Probability)
glmer.fit = glmer(choice~(Age+Probability+trialType+objectType)^4+(1|ID),
family=binomial, data=Data_tall,
control=glmerControl(optimizer="bobyqa", optCtrl=list(maxfun=1e3)))
Anova(glmer.fit)
dim(Data)
names(Data_tall)
babby.df = data.frame(ID = c(1:63), B_exp = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B"],
C_exp = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C"],
A_control = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A"],
B_control = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B"],
C_control = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C"])
names(babby.df)
babby.df_tall = reshape(babby.df, varying = c(2:6), v.names = "choice",
timevar = "condition",   direction = "long")
babby.df_tall = babby.df_tall[order(babby.df_tall$ID),]
fix(babby.df_tall)
dim(babby.df_tall)
63*5
babby.df_tall = reshape(babby.df, varying = c(2:6), v.names = "choice",
timevar = "condition",   direction = "long")
babby.df_tall = babby.df_tall[order(babby.df_tall$ID),]
babby.df_tall$objectType = rep(c("B","C","A","B","C"), times = 63)
babby.df_tall$trialType = rep(c("experimental","experimental","control",
"control","control"), times = 63)
babby.df_tall$objectType = factor(babby.df_tall$objectType)
babby.df_tall$trialType = factor(babby.df_tall$trialType)
length(Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="100%"])
babby.df = data.frame(B_exp.100 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="100%"],
C_exp.100 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="100%"],
A_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="100%"],
B_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="100%"],
C_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="100%"],
B_exp.80 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="80%"],
C_exp.80 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="80%"],
A_control.80 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="80%"],
B_control.80 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="80%"],
C_control.80 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="80%"],
B_exp.50 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="50%"],
C_exp.50 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="50%"],
A_control.50 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="50%"],
B_control.50 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="50%"],
C_control.50 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="50%"],
B_exp.20 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="20%"],
C_exp.20 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="20%"],
A_control.20 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="20%"],
B_control.20 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="20%"],
C_control.20 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="20%"],
B_exp.0 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="0%"],
C_exp.0 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="0%"],
A_control.0 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="0%"],
B_control.0 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="0%"],
C_control.0 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="0%"]
)
14+13+12+11
babby.df.100 = data.frame(B_exp.100 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="100%"],
C_exp.100 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="100%"],
A_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="100%"],
B_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="100%"],
C_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="100%"])
babby.df.100 = data.frame(B_exp.100 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="100%"],
C_exp.100 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="100%"],
A_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="100%"],
B_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="100%"],
C_control.100 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="100%"])
babby.df.80 = data.frame(B_exp.80 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="80%"],
C_exp.80 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="80%"],
A_control.80 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="80%"],
B_control.80 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="80%"],
C_control.80 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="80%"])
babby.df.50 = data.frame(B_exp.50 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="50%"],
C_exp.50 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="50%"],
A_control.50 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="50%"],
B_control.50 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="50%"],
C_control.50 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="50%"])
babby.df.20 = data.frame(B_exp.20 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="20%"],
C_exp.20 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="20%"],
A_control.20 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="20%"],
B_control.20 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="20%"],
C_control.20 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="20%"])
babby.df.0 = data.frame(B_exp.0 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="B" & Data_tall$Probability=="0%"],
C_exp.0 = Data_tall$choice[Data_tall$trialType=="experimental" & Data_tall$objectType=="C" & Data_tall$Probability=="0%"],
A_control.0 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="A" & Data_tall$Probability=="0%"],
B_control.0 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="B" & Data_tall$Probability=="0%"],
C_control.0 = Data_tall$choice[Data_tall$trialType=="control" & Data_tall$objectType=="C" & Data_tall$Probability=="0%"])
babby.df = rbind(babby.df.100, babby.df.80, babby.df.50, babby.df.20, babby.df.0)
rbind(babby.df.100, babby.df.80, babby.df.50, babby.df.20, babby.df.0)
